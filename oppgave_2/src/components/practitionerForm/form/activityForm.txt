      <label className="block text-gray-700 text-sm font-bold mb-2">Treningsaktiviteter</label>
      {formData.activities.map((activity, index) => (
        <Activity key={index} activity={activity} onChange={(e) => handleActivityChange(e, index)} onDelete={() => handleDeleteActivity(index)} />
      ))}

    <button type="button" onClick={addActivity} className="bg-gray-800 text-white py-2 px-4 rounded hover:bg-gray-700">
          Legg til aktivitet
    </button>


      const handleIntensityChange = (e: ChangeEvent<HTMLSelectElement>) => {
    setFormData({ ...formData, intensityZone: e.target.value });
  };

  const handleActivityChange = (e: ChangeEvent<HTMLInputElement>, index: number) => {
    const { id, value } = e.target;
    const updatedActivities = [...formData.activities];
    updatedActivities[index] = { ...updatedActivities[index], [id]: value };
    setFormData({ ...formData, activities: updatedActivities });
  };

  const handleDeleteActivity = (index: number) => {
    const updatedActivities = [...formData.activities];
    updatedActivities.splice(index, 1); // Fjern aktivitet ved indeks
    setFormData({ ...formData, activities: updatedActivities });
  };

  const addActivity = () => {
    setFormData({
      ...formData,
      activities: [...formData.activities, { date: '', name: '', goalId: '' }],
    });
  };